# general settings
name: train_SwinFIR-T_SRx4_CUSTOM
model_type: SwinFIRModel
scale: 4
num_gpu: auto
manual_seed: 0


### ------------ from PROF YML
gt_usm: True  # USM the ground-truth

# the first degradation process
resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
resize_range: [0.2, 1.5]
gaussian_noise_prob: 0.5
noise_range: [1, 20]
poisson_scale_range: [0.05, 2]
gray_noise_prob: 0.4
jpeg_range: [50, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
resize_range2: [0.3, 1.2]
gaussian_noise_prob2: 0.5
noise_range2: [1, 15]
poisson_scale_range2: [0.05, 1.5]
gray_noise_prob2: 0.4
jpeg_range2: [70, 95]

gt_size: 512
queue_size: 176 # divisible by batch size 8

# dataset and data loader settings
datasets:
  train:
    name: FFHQ_train
    type: FFHQsubDataset
    dataroot_gt: data/FFHQ/train/GT
    meta_info: data/FFHQ/train/meta_info_FFHQ5000sub_GT.txt
    io_backend:
      type: disk

    blur_kernel_size: 21
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 21
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 512
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1000
    prefetch_mode: ~

  val:
    name: FFHQ_val
    type: PairedImageDataset
    dataroot_gt: data/FFHQ/val/GT
    dataroot_lq: data/FFHQ/val/LQ
    io_backend:
      type: disk

### ----- END OF PROF YML

# network structures
network_g:
  type: SwinFIR
  upscale: 4
  in_chans: 3
  img_size: 64
  window_size: 16
  img_range: 1.
  depths: [6, 5, 5, 6]
  embed_dim: 64
  num_heads: [8, 8, 8, 8]
  mlp_ratio: 2
  upsampler: 'pixelshuffledirect'
  resi_connection: 'HSFB'

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  # scheduler:
  #   type: MultiStepLR
  #   milestones: [300000, 500000, 650000, 700000, 750000]
  #   gamma: 0.5

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [150000, 150000]
    restart_weights: [1, 1]
    eta_min: !!float 1e-7

  total_iter: 200000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: CharbonnierLossColor
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e6
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
      better: higher  # the higher, the better. Default: higher
    niqe:
      type: calculate_ssim
      crop_border: 0
      better: higher  # the lower, the better

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
